{"ast":null,"code":"var _jsxFileName = \"D:\\\\Repository2023\\\\masterReact\\\\my-typical-app\\\\useReducer\\\\src\\\\store\\\\auth.context.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  isLoggedIn: false,\n  onLoggout: () => {},\n  onLogin: (email, password) => {}\n});\nuseEffect(() => {\n  const storedUserLoggedInInformation = localStorage.getItem(\"isLoggedIn\");\n  if (storedUserLoggedInInformation === \"1\") {\n    setIsLoggedIn(true);\n  }\n}, []);\nexport const AuthContextProvider = props => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const logoutHandler = () => {\n    localStorage.removeItem(\"isLoggedIn\");\n    setIsLoggedIn(false);\n  };\n  const logoinHandler = () => {\n    localStorage.setItem(\"isLoggedIn\", \"1\");\n    setIsLoggedIn(true);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    children: props.childre\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 10\n  }, this);\n};\n_s(AuthContextProvider, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n_c = AuthContextProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["React","useState","useEffect","AuthContext","createContext","isLoggedIn","onLoggout","onLogin","email","password","storedUserLoggedInInformation","localStorage","getItem","setIsLoggedIn","AuthContextProvider","props","logoutHandler","removeItem","logoinHandler","setItem","childre"],"sources":["D:/Repository2023/masterReact/my-typical-app/useReducer/src/store/auth.context.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst AuthContext = React.createContext({\r\n  isLoggedIn: false,\r\n  onLoggout: () => {},\r\n  onLogin: (email, password) => {},\r\n});\r\n\r\nuseEffect(() => {\r\n  const storedUserLoggedInInformation = localStorage.getItem(\"isLoggedIn\");\r\n\r\n  if (storedUserLoggedInInformation === \"1\") {\r\n    setIsLoggedIn(true);\r\n  }\r\n}, []);\r\n\r\nexport const AuthContextProvider = (props) => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  const logoutHandler = () => {\r\n    localStorage.removeItem(\"isLoggedIn\");\r\n    setIsLoggedIn(false);\r\n  };\r\n\r\n  const logoinHandler = () => {\r\n    localStorage.setItem(\"isLoggedIn\", \"1\");\r\n\r\n    setIsLoggedIn(true);\r\n  };\r\n  return <AuthContext.Provider>{props.childre}</AuthContext.Provider>;\r\n};\r\n\r\nexport default AuthContext;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAEnD,MAAMC,WAAW,gBAAGH,KAAK,CAACI,aAAa,CAAC;EACtCC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE,MAAM,CAAC,CAAC;EACnBC,OAAO,EAAE,CAACC,KAAK,EAAEC,QAAQ,KAAK,CAAC;AACjC,CAAC,CAAC;AAEFP,SAAS,CAAC,MAAM;EACd,MAAMQ,6BAA6B,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;EAExE,IAAIF,6BAA6B,KAAK,GAAG,EAAE;IACzCG,aAAa,CAAC,IAAI,CAAC;EACrB;AACF,CAAC,EAAE,EAAE,CAAC;AAEN,OAAO,MAAMC,mBAAmB,GAAIC,KAAK,IAAK;EAAA;EAC5C,MAAM,CAACV,UAAU,EAAEQ,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMe,aAAa,GAAG,MAAM;IAC1BL,YAAY,CAACM,UAAU,CAAC,YAAY,CAAC;IACrCJ,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,MAAMK,aAAa,GAAG,MAAM;IAC1BP,YAAY,CAACQ,OAAO,CAAC,YAAY,EAAE,GAAG,CAAC;IAEvCN,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EACD,oBAAO,QAAC,WAAW,CAAC,QAAQ;IAAA,UAAEE,KAAK,CAACK;EAAO;IAAA;IAAA;IAAA;EAAA,QAAwB;AACrE,CAAC;AAAC,GAdWN,mBAAmB;AAAA,KAAnBA,mBAAmB;AAgBhC,eAAeX,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}